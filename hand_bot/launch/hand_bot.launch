<!-- Every launch file starts with this command -->
<launch> 

    <!-- Include helps you launch other launch files within this launch file-->
        <!-- For file tag, mention the gazebo_ros empty world's launch file -->
        <!-- For the arg name, give any name of your choice to this world -->
        <!-- for the value tag, provide the path to the world file that you downloaded -->
	<include file= "$(find gazebo_ros)/launch/empty_world.launch"> 
	</include>
		

        <!-- Defining this param here helps you store all the urdf contents of robot+lidar into a single param name -->
        <!-- fill the command by adding in the path to your .xacro file the $ symbol below -->
        <!--  -->
	<param name= "robot_description" command="$(find xacro)/xacro --inorder $(find hand_bot)/urdf/hand_bot.xacro " />
    <!-- Add in your robot name in the value tag -->
    <param name = "my_robot" value="hand_bot"/> 
	<arg name ="init_pose" value="-x 0 -y -0.08 -z 0 -R 0 -P 0 -Y 0"/>
    
    <!-- This command adds the controller variables you defined in the config file into ros's parameter list. Simply add the file name in the file tag -->
	<rosparam file="$(find hand_bot)/config/hand_bot_controllers1.yaml" command="load"/>



    <!-- TF node that gives the static transformation between the world map and the base link of your robot. Change /base_link to the /root link name of your robot -->
    <node pkg="tf" type="static_transform_publisher" name="map_to_base" args="1 0 0 0 0 0 1 /map /dummy_link 10" />


    <!-- Controller spawner: Starts all the defined controllers with their configs. Just add your controller names defined in your config file into the args tag below   -->
    <node name="controller_spwaner" pkg="controller_manager" type="spawner" respawn="false"
    	output="screen" ns="/hand_bot" args="joint_state_controller thumb_lower_controller thumb_tip_controller index_lower_controller index_middle_controller index_tip_controller middle_lower_controller middle_middle_controller middle_tip_controller ring_lower_controller ring_middle_controller ring_tip_controller little_lower_controller little_middle_controller little_tip_controller" />
    	
    <!-- A node to publish the robot states onto ros network -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen"/>	


    <!-- A node to spawn the robot into gazebo's world file. Notice that the args has the param robot_description that you previously defined. This is how your robot's spec gets included.-->
   	<node
		name="spawn_model"
		pkg="gazebo_ros"
		type="spawn_model"
		args="$(arg init_pose) -param robot_description -urdf -model hand_bot"
		output="screen"/>

	<!--Default node -->
	<node
    name="fake_joint_calibration"
    pkg="rostopic"
    type="rostopic"
    args="pub /calibrated std_msgs/Bool true" />


</launch>
